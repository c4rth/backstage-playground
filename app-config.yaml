app:
  title: Carth Backstage App
  baseUrl: http://localhost:3000

organization:
  name: Acme

backend:
  # Used for enabling authentication, secret is shared by all backend plugins
  # See https://backstage.io/docs/auth/service-to-service-auth for
  # information on the format
  auth:
    dangerouslyDisableDefaultAuthPolicy: true
    
  baseUrl: http://localhost:7007
  listen:
    port: 7007
    # Uncomment the following host directive to bind to specific interfaces
    #host: 127.0.0.1
    #host: 0.0.0.0
  csp:
    connect-src: ["'self'", "http:", "https:"]
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE, OPTIONS, CONNECT, TRACE]
    credentials: true
  # This is for local development only, it is not recommended to use this in production
  # The production database configuration is stored in app-config.production.yaml
  database:
    client: pg
    connection:
      #host: 0.0.0.0
      host: 127.0.0.1
      port: 5432
      user: postgres
      password: postgres
    # client: better-sqlite3
    # connection: ":memory:"
  # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir

permission:
  enabled: true
  rbac:
    pluginsWithPermission:
      - catalog
      - policy
      - scaffolder
      - search  # ?
      - permission # ?
      - qeta

qeta:
  tags:
    allowCreation: false
    allowedTags:
      - java
      - javascript
      - azure
      - ccoe
      - python
    max: 3
  moderators:
    - 'group:default/backstage-admin'

integrations:
  github:
    - host: github.com
      # This is a Personal Access Token or PAT from GitHub. You can find out how to generate this token, and more information
      # about setting up the GitHub integration here: https://backstage.io/docs/integrations/github/locations#configuration
      token: ${GITHUB_TOKEN}
    ### Example for how to add your GitHub Enterprise instance using the API:
    # - host: ghe.example.net
    #   apiBaseUrl: https://ghe.example.net/api/v3
    #   token: ${GHE_TOKEN}

#proxy:
### Example for how to add a proxy endpoint for the frontend.
### A typical reason to do this is to handle HTTPS and CORS for internal services.
# endpoints:
#   '/test':
#     target: 'https://example.com'
#     changeOrigin: true

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: "local" # Alternatives - 'external'
  generator:
    runIn: "local" # Alternatives - 'local'
  publisher:
    type: "local" # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

auth:
  autologout:
    enabled: true
    idleTimeoutMinutes: 10
  environment: development
  providers:
    guest: 
      dangerouslyAllowOutsideDevelopment: true
    microsoft:
      development:
        clientId: ${AZURE_AUTH_CLIENT_ID}
        clientSecret: ${AZURE_AUTH_CLIENT_SECRET}
        tenantId: ${AZURE_AUTH_TENANT_ID}
        domainHint: ${AZURE_AUTH_TENANT_ID}
        signIn:
          resolvers:
            - resolver: emailMatchingUserEntityProfileEmail

#scaffolder:
# see https://backstage.io/docs/features/software-templates/configuration for software template options

search:
  pg:
    highlightOptions:
      useHighlight: true # Used to enable to disable the highlight feature. The default value is true
      maxWord: 35 # Used to set the longest headlines to output. The default value is 35.
      minWord: 15 # Used to set the shortest headlines to output. The default value is 15.
      shortWord: 3 # Words of this length or less will be dropped at the start and end of a headline, unless they are query terms. The default value of three (3) eliminates common English articles.
      highlightAll: false # If true the whole document will be used as the headline, ignoring the preceding three parameters. The default is false.
      maxFragments: 0 # Maximum number of text fragments to display. The default value of zero selects a non-fragment-based headline generation method. A value greater than zero selects fragment-based headline generation (see the linked documentation above for more details).
      fragmentDelimiter: ' ... ' # Delimiter string used to concatenate fragments. Defaults to " ... ".
  collators:
    catalog:
      schedule:
        frequency: PT1M
        timeout: PT15M
        initialDelay: PT5S
catalog:
  #  import:
  #    entityFilename: catalog-info.yaml
  #    pullRequestBranchName: backstage-integration
  rules:
    - allow:
        [
          Component,
          System,
          API,
          Resource,
          Template,
          Domain,
          Location,
          Group,
          User,
        ]
  providers:
    microsoftGraphOrg:
      default:
        target: https://graph.microsoft.com/v1.0
        authority: https://login.microsoftonline.com
        tenantId: ${AZURE_GRAPH_TENANT_ID}
        clientId: ${AZURE_GRAPH_CLIENT_ID}
        clientSecret: ${AZURE_GRAPH_CLIENT_SECRET}
        #queryMode: basic # advanced
        user:
        #  filter: accountEnabled eq true and userType eq 'member'
          select: ["id", "displayName", "description", "mail"]
        userGroupMember:
          expand: manager
        #  filter: "displayName eq 'backstage-users'"
        group:
          filter: securityEnabled eq true
          select: ["id", "displayName", "description"]
        #group:
        #  filter: >
        #    securityEnabled eq false
        #    and mailEnabled eq true
        #    and groupTypes/any(c:c+eq+'Unified')
        #  select: ['id', 'displayName', 'description']
        rules:
          - allow: [User, Group]
        schedule:
          frequency: { minutes: 15 }
          timeout: { minutes: 5 }
          initialDelay: { seconds: 15 }

  locations:
    # Local example data, file locations are relative to the backend process, typically `packages/backend`
    - type: file
      target: ../../examples/catalog-info.yaml
    #    - type: file
    # target: ../../examples/docs/techdocs/catalog-info.yaml

    #   # Local example template
    #   - type: file
    #     target: ../../examples/template/template.yaml
    #     rules:
    #       - allow: [Template]

    # Local example organizational data
    - type: file
      target: ../../examples/org.yaml
      rules:
        - allow: [User, Group]

    # Uncomment these lines to add more example data
    - type: url
      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-apis.yaml

  #   ## Uncomment these lines to add an example org
  #   # - type: url
  #   #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/acme-corp.yaml
  #   #   rules:
  #   #     - allow: [User, Group]